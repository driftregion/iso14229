name: static analysis

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  static-analysis:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake python3-pip jq cppcheck
        pip3 install codechecker requests

    - name: Verify analyzers
      run: |
        CodeChecker analyzers --details

    - name: Build compile commands
      run: |
        make compile_commands.json

    - name: Analyze with CodeChecker
      run: |
        make static_analysis

    - name: Print report summary
      run: |
        CodeChecker parse reports --print-steps || echo "No issues found"

    - name: Generate SARIF report
      run: |
        if [ -d "reports" ] && [ "$(ls -A reports 2>/dev/null)" ]; then
          CodeChecker parse reports --export sarif -o results.sarif
          # Convert absolute file URIs to relative paths for GitHub Code Scanning
          sed -i "s|file://$PWD/||g" results.sarif
        else
          echo "No reports found, creating empty SARIF file"
          echo '{"version":"2.1.0","$schema":"https://json.schemastore.org/sarif-2.1.0.json","runs":[{"tool":{"driver":{"name":"CodeChecker","version":"unknown"}},"results":[]}]}' > results.sarif
        fi

    - name: Upload SARIF results to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: results.sarif
        category: "CodeChecker Static Analysis"

    - name: Upload analysis reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: static-analysis-reports
        path: |
          reports/
          results.sarif
        retention-days: 30